#! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
#! parse-kind: ClusterServiceVersion
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: cluster-federation.v0.0.11
  namespace: placeholder
  annotations:
    capabilities: Basic Install
    categories: "OpenShift Optional, Integration & Delivery"
    description: Cluster-scoped Federation
    certified: "false"
    containerImage: "quay.io/kubernetes-multicluster/federation-v2:v0.0.11"
    createdAt: "2019-01-01T00:00:00Z"
spec:
  displayName: Cluster Federation
  description: |
    Kubernetes Federation is a tool to sync (aka "federate") a set of Kubernetes
    objects from a "source" into a set of other clusters. Common use-cases
    include federating Namespaces across all of your clusters or rolling out an
    application across several geographically distributed clusters. The
    Kubernetes Federation Operator runs all of the components under the hood to
    quickly get up and running with this powerful concept. Federation is a key
    part of any Hybrid Cloud capability.

    This CSV deploys Federation scoped in a cluster-scoped configuration,
    meaning that all namespaces in the cluster can be serviced by this version
    of federation. Use this CSV if you want to add federation capability to all
    namespaces in your cluster.
    
    In this configuration, Federation supports deploying cluster-scoped
    resources. In this configuration, federation will watch
    `FederatedTypeConfig` and `FederatedClusters` in the namespace it is
    deployed into.

    ### Using Federation
    After configuring and starting your Federation instance, use the command
    line tool to enable each type of object you would like federated to all of
    your clusters. This deploys Federation in a namespace-scoped configuration.
    This means that only objects that share the Namespace where your Federation
    instance is deployed can be federated. You must enable Federation support
    for Namespaces in this configuration before other types will work. Use
    `kubefedctl enable namespaces`.

    Next, use `kubefedctl enable <API type>` for the other objects you would like to federate.
    Finally, [register the other clusters](https://github.com/kubernetes-sigs/federation-v2/blob/master/docs/userguide.md#join-clusters) that will be federated to.
    See the [full user guide](https://github.com/kubernetes-sigs/federation-v2/blob/master/docs/userguide.md) for other capabilities of Federation.
  keywords: ['kubernetes', 'federation', 'hybrid', 'hybrid cloud', 'multi-cluster', 'cluster']
  version: 0.0.11
  maturity: alpha
  provider:
    name: Red Hat
  labels:
    alm-owner-federation: cluster-federation
    alm-status-descriptors: cluster-federation.v0.0.11
  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    # HACK: workaround for ALM-927
    supported: true
  - type: MultiNamespace
    supported: false
  - type: AllNamespaces
    supported: true
  install:
    strategy: deployment
    spec:
      permissions:
      - serviceAccountName: federation-controller-manager
        rules:
        - apiGroups:
          - clusterregistry.k8s.io
          resources:
          - clusters
          verbs:
          - "*"
        - apiGroups:
          - core.federation.k8s.io
          resources:
          - "*"
          verbs:
          - "*"
        - apiGroups:
          - types.federation.k8s.io
          resources:
          - "*"
          verbs:
          - "*"
        - apiGroups:
          - multiclusterdns.federation.k8s.io
          resources:
          - "*"
          verbs:
          - "*"
        - apiGroups:
          - scheduling.federation.k8s.io
          resources:
          - "*"
          verbs:
          - "*"
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - "*"
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - "*"
      deployments:
      - name: federation-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: federation-controller-manager
          template:
            metadata:
              labels:
                app: federation-controller-manager
            spec:
              containers:
                - name: controller-manager
                  image: quay.io/kubernetes-multicluster/federation-v2:v0.0.11
                  resources:
                    limits:
                      cpu: 100m
                      memory: 128Mi
                    requests:
                      cpu: 100m
                      memory: 64Mi
                  command:
                    - /root/controller-manager
                  args:
                    - --federation-namespace=$(FEDERATION_NAMESPACE)
                    - -v=5
                    - --logtostderr
                  imagePullPolicy: Always
                  env:
                  - name: FEDERATION_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
              restartPolicy: Always
              terminationGracePeriodSeconds: 5
              serviceAccountName: federation-controller-manager
              serviceAccount: federation-controller-manager
  customresourcedefinitions:
    owned:
      - description: Represents an instance of a Cluster Registry
        displayName: Cluster Registry Application
        kind: Cluster
        name: clusters.clusterregistry.k8s.io
        version: v1alpha1
      - description: Represents a Domain name and nameserver for use with multicluster DNS.
        displayName: Domain
        kind: Domain
        name: domains.multiclusterdns.federation.k8s.io
        version: v1alpha1
      - description: Represents an instance of a FederatedCluster resource
        displayName: FederatedCluster Resource
        kind: FederatedCluster
        name: federatedclusters.core.federation.k8s.io
        version: v1alpha1
      - description: Represents an instance of a FederationV2 sync controller
        displayName: FederationV2 Push Reconciler Application
        kind: FederatedTypeConfig
        name: federatedtypeconfigs.core.federation.k8s.io
        version: v1alpha1
      - description: Represents the status of a FederatedService
        displayName: Federated service status
        kind: FederatedServiceStatus
        name: federatedservicestatuses.core.federation.k8s.io
        version: v1alpha1
      - description: Represents a configuration of a Federation controller
        displayName: FederationConfig
        kind: FederationConfig
        name: federationconfigs.core.federation.k8s.io
        version: v1alpha1
      - description: Represents an instance of a PropagatedVersion resource
        displayName: PropagatedVersion Resource
        kind: PropagatedVersion
        name: propagatedversions.core.federation.k8s.io
        version: v1alpha1
      - description: Represents an instance of a DNSEndpoint resource
        displayName: DNSEndpoint Resource
        kind: DNSEndpoint
        name: dnsendpoints.multiclusterdns.federation.k8s.io
        version: v1alpha1
      - description: Represents an instance of a MultiClusterIngressDNSRecord resource
        displayName: MultiClusterIngressDNSRecord Resource
        kind: IngressDNSRecord
        name: ingressdnsrecords.multiclusterdns.federation.k8s.io
        version: v1alpha1
      - description: Represents an instance of a MultiClusterServiceDNSRecord resource
        displayName: MultiClusterServiceDNSRecord Resource
        kind: ServiceDNSRecord
        name: servicednsrecords.multiclusterdns.federation.k8s.io
        version: v1alpha1
      - description: Represents an instance of a ReplicaSchedulingPreference resource
        displayName: ReplicaSchedulingPreference Resource
        kind: ReplicaSchedulingPreference
        name: replicaschedulingpreferences.scheduling.federation.k8s.io
        version: v1alpha1
